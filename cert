#!/bin/ksh

# Configurable paths
CSV_FILE="/path/to/your/certificates.csv"
LOG_FILE="/tmp/cert_expiry_check.log"
EMAIL_TO="your_email@example.com"
HTML_HEADER="/path/to/mail_body_header.html"
HTML_FOOTER="/path/to/mail_body_footer.html"
HTML_BODY="/tmp/final_mail_body.html"

TODAY=$(date +%Y-%m-%d)
THRESHOLD_DATE=$(date -d "+30 days" +%Y-%m-%d)

# Init logs
echo "[$(date)] Running certificate expiry check" > "$LOG_FILE"
> "$HTML_BODY"

# Check required files
if [ ! -f "$CSV_FILE" ]; then
  echo "ERROR: CSV file not found at $CSV_FILE" >> "$LOG_FILE"
  echo "CSV file missing: $CSV_FILE" | mailx -s "Cert Expiry Script Error" "$EMAIL_TO"
  exit 1
fi

if [ ! -f "$HTML_HEADER" ] || [ ! -f "$HTML_FOOTER" ]; then
  echo "ERROR: HTML templates not found." >> "$LOG_FILE"
  echo "Missing HTML header/footer for email." | mailx -s "Cert Expiry Script Error" "$EMAIL_TO"
  exit 1
fi

# Build HTML body
cat "$HTML_HEADER" > "$HTML_BODY"

{
  read  # skip header
  while IFS=, read name expiry; do
    name=$(echo "$name" | xargs)
    expiry=$(echo "$expiry" | xargs)

    if ! date -d "$expiry" >/dev/null 2>&1; then
      echo "WARNING: Invalid date for '$name': $expiry" >> "$LOG_FILE"
      continue
    fi

    expiry_epoch=$(date -d "$expiry" +%s)
    today_epoch=$(date -d "$TODAY" +%s)
    threshold_epoch=$(date -d "$THRESHOLD_DATE" +%s)

    if [ "$expiry_epoch" -lt "$today_epoch" ]; then
      echo "<li><b>$name</b> has <span style='color:red;'>already expired</span> on <i>$expiry</i></li>" >> "$HTML_BODY"
    elif [ "$expiry_epoch" -le "$threshold_epoch" ]; then
      echo "<li><b>$name</b> is <span style='color:orange;'>expiring soon</span> on <i>$expiry</i></li>" >> "$HTML_BODY"
    fi
  done
} < "$CSV_FILE"

cat "$HTML_FOOTER" >> "$HTML_BODY"

# Only send mail if body has any list item
if grep -q "<li>" "$HTML_BODY"; then
  mailx -a "Content-Type: text/html" -s "Certificate Expiry Report - $TODAY" "$EMAIL_TO" < "$HTML_BODY"
fi

# Cleanup
rm -f "$HTML_BODY"
echo "[$(date)] Check complete" >> "$LOG_FILE"
